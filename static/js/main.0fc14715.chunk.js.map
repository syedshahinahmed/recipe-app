{"version":3,"sources":["components/Form.js","components/Recipes.js","App.js","components/Recipe.js","components/Router.js","serviceWorker.js","index.js"],"names":["Form","props","react_default","a","createElement","onSubmit","getRecipe","style","marginBottom","className","type","name","Recipes","recipes","map","recipe","key","label","src","image","alt","length","concat","substring","source","react_router_dom","to","pathname","state","APP_ID","APP_KEY","App","_callee","e","recipeName","api__call","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","sent","json","_this","setState","hits","console","log","stop","componentDidMount","localJson","localStorage","getItem","localJsonRecipe","JSON","parse","componentDidUpdate","localRecipes","stringify","setItem","components_Form","this","components_Recipes","Component","Recipe","activeRecipes","title","req","res","location","myRecipe","href","url","rel","Router","react_router","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0fc14715.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = props => {\n  return (\n    <form onSubmit={props.getRecipe} style={{ marginBottom: \"2rem\" }}>\n      <input className=\"form__input\" type=\"text\" name=\"recipeName\" />\n      <button className=\"form__btn\" type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Recipes = props => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {props.recipes.map(recipe => {\n          return (\n            <div\n              key={recipe.recipe.label}\n              className=\"col-md-4\"\n              style={{ marginBottom: \"2rem\" }}\n            >\n              <div className=\"recipes__container\">\n                <img\n                  className=\"recipes__container-img\"\n                  src={recipe.recipe.image}\n                  alt={recipe.recipe.label}\n                />\n                <div className=\"recipes__body\">\n                  <h5 className=\"recipes__title\">\n                    {recipe.recipe.label.length < 20\n                      ? `${recipe.recipe.label}`\n                      : `${recipe.recipe.label.substring(0, 25)}...`}\n                  </h5>\n                  <p className=\"recipes__subtitle\">\n                    Publisher: <span>{recipe.recipe.source}</span>\n                  </p>\n                </div>\n                <button className=\"recipes_btn\">\n                  <Link\n                    to={{\n                      pathname: `/recipe/${recipe.recipe.label}`,\n                      state: { recipe: recipe.recipe.label }\n                    }}\n                  >\n                    View Rcipe\n                  </Link>\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Recipes;\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport { async } from \"q\";\nimport Recipes from \"./components/Recipes\";\n\n// .Edamam API ID\nconst APP_ID = \"ee8cf5b2\";\n\n// .Edamam API KEY\nconst APP_KEY = \"9cc9114c66e8fda5a47697bf6aaa0032\";\n\nclass App extends Component {\n  //Initial State\n  state = {\n    recipes: []\n  };\n\n  //Getting Recipe\n  getRecipe = async e => {\n    //Preventing Default Behaviour\n    e.preventDefault();\n\n    //getting user input\n    const recipeName = e.target.elements.recipeName.value;\n\n    // api call\n\n    const api__call = await fetch(\n      `https://api.edamam.com/search?q=${recipeName}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n\n    // Converting Data to JSON\n    const data = await api__call.json();\n\n    // setting state\n    this.setState({ recipes: data.hits });\n\n    console.log(this.state.recipes);\n  };\n\n  // Pulling Data from LocalStorage using componentDidMount function\n  componentDidMount = () => {\n    const localJson = localStorage.getItem(\"ourRecipe\");\n\n    //Converting data back to JSON format\n\n    const localJsonRecipe = JSON.parse(localJson);\n\n    // Now setting our state to local recipe state\n\n    this.setState({ recipes: localJsonRecipe });\n  };\n\n  // Saving Data to LocalStorage using componentDidUpdate function\n  componentDidUpdate = () => {\n    const localRecipes = JSON.stringify(this.state.recipes);\n    localStorage.setItem(\"ourRecipe\", localRecipes);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Recipe App</h1>\n        </header>\n        <Form getRecipe={this.getRecipe} />\n        <Recipes recipes={this.state.recipes} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { async } from \"q\";\nimport { Link } from \"react-router-dom\";\n\n// .Edamam API ID\nconst APP_ID = \"ee8cf5b2\";\n\n// .Edamam API KEY\nconst APP_KEY = \"9cc9114c66e8fda5a47697bf6aaa0032\";\n\nclass Recipe extends Component {\n  //Initial State\n  state = {\n    activeRecipes: []\n  };\n\n  // LifeCycle Hook Componet Did Mount\n\n  componentDidMount = async () => {\n    // Getting induvidula recipe from id\n    const title = this.props.location.state.recipe;\n    // console.log(title);\n\n    //\n    const req = await fetch(\n      `https://api.edamam.com/search?q=${title}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n\n    // https://cors-anywhere.herokuapp.com/\n    //\n    const res = await req.json();\n\n    //\n    this.setState({ activeRecipes: res.hits[0].recipe });\n    console.log(this.state.activeRecipes);\n    console.log(res.hits);\n  };\n  render() {\n    console.log(this.props);\n    const myRecipe = this.state.activeRecipes;\n    return (\n      <div className=\"container\">\n        {this.state.activeRecipes.length !== 0 && (\n          <div className=\"active-recipe\">\n            <img\n              className=\"active-recipe__img\"\n              src={myRecipe.image}\n              alt={myRecipe.label}\n            />\n            <h3 className=\"active-recipe__title\">{myRecipe.label}</h3>\n            <h4 className=\"active-recipe__publisher\">\n              Publisher: <span>{myRecipe.source}</span>\n            </h4>\n            <p className=\"active-recipe__website\">\n              Website:{\" \"}\n              <span>\n                <a\n                  href={myRecipe.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {myRecipe.url}\n                </a>\n              </span>\n            </p>\n            <button className=\"active-recipe__button\">\n              <Link to=\"/\">Go Home</Link>\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Recipe;\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"../App\";\nimport Recipe from \"./Recipe\";\n\nconst Router = () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" component={App} exact />\n      <Route path=\"/recipe/:id\" component={Recipe} />\n    </Switch>\n  </HashRouter>\n);\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Router from \"./components/Router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}